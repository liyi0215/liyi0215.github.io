<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[hexo添加不被hexo编译的静态网页]]></title>
      <url>http://liyi.wiki/posts/20662.html</url>
      <content type="html"><![CDATA[<h2 id="如果你是不想hexo-g时被模板改变你的html的话，可在在文件头加-layout-false"><a href="#如果你是不想hexo-g时被模板改变你的html的话，可在在文件头加-layout-false" class="headerlink" title="如果你是不想hexo g时被模板改变你的html的话，可在在文件头加 layout: false"></a>如果你是不想hexo g时被模板改变你的html的话，可在在文件头加 <strong><code>layout: false</code></strong></h2><p>例如新建一个404页面<br><a id="more"></a><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">layout: false</div><div class="line">title: "404"</div><div class="line">date: 2015-02-05 20:03:48</div><div class="line">---</div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>公益404<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>404 Page Not Found<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"http://www.qq.com/404/search_children.js"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[find命令实例:查找文件或目录]]></title>
      <url>http://liyi.wiki/posts/47084.html</url>
      <content type="html"><![CDATA[<h1 id="find命令实例"><a href="#find命令实例" class="headerlink" title="find命令实例"></a>find命令实例</h1><blockquote>
<p>find命令是Linux系统中最重要也是最常用的命令之一。find命令勇于根据你指定的参数搜索和定位文件和目录的列表。find命令可以在多数情况下使用,比如你可以通过权限、用户、用户组、文件类型、日期、大小、和其他可能的条件来查找文件。</p>
</blockquote>
<h2 id="简单的使用find命令查找制定目录下的某个文件的方法如下"><a href="#简单的使用find命令查找制定目录下的某个文件的方法如下" class="headerlink" title="简单的使用find命令查找制定目录下的某个文件的方法如下:"></a>简单的使用find命令查找制定目录下的某个文件的方法如下:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># find /etc -name inittab</span></div><div class="line">/etc/inittab</div></pre></td></tr></table></figure>
<p><em><strong>此处命令行提示符是<code>#</code>号,表示当前用户是root</strong></em><br><em><strong>-type d(directory目录) -type f(file文件)</strong></em><br><a id="more"></a></p>
<h2 id="找出当前目录下-文件名不区分大小写是-example-的所有文件"><a href="#找出当前目录下-文件名不区分大小写是-example-的所有文件" class="headerlink" title="找出当前目录下,文件名不区分大小写是 example 的所有文件"></a>找出当前目录下,文件名不区分大小写是 example 的所有文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ find . -iname example</div><div class="line">./example</div><div class="line">./Example</div></pre></td></tr></table></figure>
<h2 id="找出当前目录下-目录名是tmp的目录"><a href="#找出当前目录下-目录名是tmp的目录" class="headerlink" title="找出当前目录下,目录名是tmp的目录:"></a>找出当前目录下,目录名是tmp的目录:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ find . -type d -name tmp</div><div class="line">./tmp</div></pre></td></tr></table></figure>
<h2 id="找出当前目录下所有-php-文件"><a href="#找出当前目录下所有-php-文件" class="headerlink" title="找出当前目录下所有 php 文件"></a>找出当前目录下所有 php 文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ find . -type f -name <span class="string">"*.php"</span></div></pre></td></tr></table></figure>
<h2 id="找出当前目录下-文件权限是777的文件"><a href="#找出当前目录下-文件权限是777的文件" class="headerlink" title="找出当前目录下,文件权限是777的文件"></a>找出当前目录下,文件权限是777的文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ find . -type f -perm 0777</div></pre></td></tr></table></figure>
<h2 id="找出当前目录下-文件权限不是是777的文件"><a href="#找出当前目录下-文件权限不是是777的文件" class="headerlink" title="找出当前目录下,文件权限不是是777的文件"></a>找出当前目录下,文件权限不是是777的文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ find . -type f ! -perm 777</div></pre></td></tr></table></figure>
<h2 id="找出-etc-目录下所有只读文件"><a href="#找出-etc-目录下所有只读文件" class="headerlink" title="找出 /etc/ 目录下所有只读文件"></a>找出 <code>/etc/</code> 目录下所有只读文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># find /etc -type f ! -perm /a+w</span></div></pre></td></tr></table></figure>
<h2 id="找出你账号的主目录下的所有可执行文件"><a href="#找出你账号的主目录下的所有可执行文件" class="headerlink" title="找出你账号的主目录下的所有可执行文件"></a>找出你账号的主目录下的所有可执行文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ find ~ -type f -perm /a+x</div></pre></td></tr></table></figure>
<h2 id="找出当前目录下的所有空文件"><a href="#找出当前目录下的所有空文件" class="headerlink" title="找出当前目录下的所有空文件"></a>找出当前目录下的所有空文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ find . -type <span class="_">-f</span> -empty</div></pre></td></tr></table></figure>
<h2 id="找出当前目录下的所有空文目录"><a href="#找出当前目录下的所有空文目录" class="headerlink" title="找出当前目录下的所有空文目录"></a>找出当前目录下的所有空文目录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ find . -type <span class="_">-d</span> -empty</div></pre></td></tr></table></figure>
<h2 id="找出-tmp-目录下所有隐藏文件"><a href="#找出-tmp-目录下所有隐藏文件" class="headerlink" title="找出 /tmp 目录下所有隐藏文件"></a>找出 <code>/tmp</code> 目录下所有隐藏文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ find /tmp -type f -name <span class="string">".*"</span></div></pre></td></tr></table></figure>
<h2 id="找出-tmp-下-所有者是-root-的文件和目录"><a href="#找出-tmp-下-所有者是-root-的文件和目录" class="headerlink" title="找出 /tmp 下,所有者是 root 的文件和目录"></a>找出 <code>/tmp</code> 下,所有者是 <code>root</code> 的文件和目录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ find /tmp -user root</div></pre></td></tr></table></figure>
<h2 id="找出-tmp-下-用户组是-developer-的文件和目录"><a href="#找出-tmp-下-用户组是-developer-的文件和目录" class="headerlink" title="找出 /tmp 下,用户组是 developer 的文件和目录"></a>找出 <code>/tmp</code> 下,用户组是 <code>developer</code> 的文件和目录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ find /tmp -group developer</div></pre></td></tr></table></figure>
<h2 id="找出你账号的主目录下-三天前修改的文件"><a href="#找出你账号的主目录下-三天前修改的文件" class="headerlink" title="找出你账号的主目录下,三天前修改的文件"></a>找出你账号的主目录下,三天前修改的文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ find ~ -type f -mtime 3</div></pre></td></tr></table></figure>
<h2 id="找出你账号的主目录下-三十天前修改的-所有-文件"><a href="#找出你账号的主目录下-三十天前修改的-所有-文件" class="headerlink" title="找出你账号的主目录下,三十天前修改的 所有 文件"></a>找出你账号的主目录下,三十天前修改的 <strong>所有</strong> 文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ find ~ -type f -mtime +30</div></pre></td></tr></table></figure>
<h2 id="找出你账号的主目录下-30天以前60天以内修改的所有文件"><a href="#找出你账号的主目录下-30天以前60天以内修改的所有文件" class="headerlink" title="找出你账号的主目录下,30天以前60天以内修改的所有文件"></a>找出你账号的主目录下,30天以前60天以内修改的所有文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ find ~ -type f -mtime +30 -mtime -60</div></pre></td></tr></table></figure>
<h2 id="找出-etc-目录下-一小时以内变更过的文件"><a href="#找出-etc-目录下-一小时以内变更过的文件" class="headerlink" title="找出 /etc 目录下,一小时以内变更过的文件"></a>找出 <code>/etc</code> 目录下,一小时以内变更过的文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># find /etc -type f -cmin -60</span></div></pre></td></tr></table></figure>
<h2 id="找出-etc-目录下-一小时以内访问过的文件"><a href="#找出-etc-目录下-一小时以内访问过的文件" class="headerlink" title="找出 /etc 目录下,一小时以内访问过的文件"></a>找出 <code>/etc</code> 目录下,一小时以内访问过的文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># find /etc -type f -amin -60</span></div></pre></td></tr></table></figure>
<h2 id="找出你主目录下-大小是-50MB-的所有文件"><a href="#找出你主目录下-大小是-50MB-的所有文件" class="headerlink" title="找出你主目录下,大小是 50MB 的所有文件"></a>找出你主目录下,大小是 <strong>50MB</strong> 的所有文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ find ~ -type f -size 50MB</div></pre></td></tr></table></figure>
<h2 id="找出你主目录下-大于50MB小于100MB的所有文件"><a href="#找出你主目录下-大于50MB小于100MB的所有文件" class="headerlink" title="找出你主目录下,大于50MB小于100MB的所有文件"></a>找出你主目录下,大于50MB小于100MB的所有文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ find ~ -type f -size +50MB -size -100MB</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[npm换源]]></title>
      <url>http://liyi.wiki/posts/56020.html</url>
      <content type="html"><![CDATA[<p><strong>Mark一下 原文 <a href="http://riny.net/2014/cnpm/" target="_blank" rel="external">国内优秀npm镜像推荐及使用</a></strong></p>
<p>npm全称 <em><strong><code>Node Package Manager</code></strong></em>，是node.js的模块依赖管理工具。由于npm的源在国外，所以国内用户使用起来各种不方便。下面整理出了一部分国内优秀的npm镜像资源，国内用户可以选择使用。</p>
<a id="more"></a>
<h2 id="国内优秀npm镜像"><a href="#国内优秀npm镜像" class="headerlink" title="国内优秀npm镜像"></a>国内优秀npm镜像</h2><h3 id="淘宝npm镜像"><a href="#淘宝npm镜像" class="headerlink" title="淘宝npm镜像"></a>淘宝npm镜像</h3><blockquote>
<p>搜索地址：<a href="http://npm.taobao.org/" target="_blank" rel="external">http://npm.taobao.org/</a><br>registry地址：<a href="http://registry.npm.taobao.org/" target="_blank" rel="external">http://registry.npm.taobao.org/</a></p>
</blockquote>
<h3 id="cnpmjs镜像"><a href="#cnpmjs镜像" class="headerlink" title="cnpmjs镜像"></a>cnpmjs镜像</h3><blockquote>
<p>搜索地址：<a href="http://cnpmjs.org/" target="_blank" rel="external">http://cnpmjs.org/</a><br>registry地址：<a href="http://r.cnpmjs.org/" target="_blank" rel="external">http://r.cnpmjs.org/</a></p>
</blockquote>
<h2 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h2><p>有很多方法来配置npm的registry地址，下面根据不同情境列出几种比较常用的方法。以淘宝npm镜像举例：</p>
<h3 id="临时使用"><a href="#临时使用" class="headerlink" title="临时使用"></a>临时使用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm --registry https://registry.npm.taobao.org install express</div></pre></td></tr></table></figure>
<h3 id="持久使用"><a href="#持久使用" class="headerlink" title="持久使用"></a>持久使用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</div><div class="line">// 配置后可通过下面方式来验证是否成功</div><div class="line">npm config get registry</div><div class="line">// 或</div><div class="line">npm info express</div></pre></td></tr></table></figure>
<h3 id="通过cnpm使用"><a href="#通过cnpm使用" class="headerlink" title="通过cnpm使用"></a>通过cnpm使用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</div><div class="line"></div><div class="line">// 使用</div><div class="line">cnpm install express</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[FE-learning]]></title>
      <url>http://liyi.wiki/posts/41786.html</url>
      <content type="html"><![CDATA[<p>转载请注明出处: <a href="https://github.com/qiu-deqing/FE-learning" target="_blank" rel="external">https://github.com/qiu-deqing/FE-learning</a></p>
<h1 id="FE-learning"><a href="#FE-learning" class="headerlink" title="FE-learning"></a>FE-learning</h1><p>结合个人经历总结的前端入门方法，总结从零基础到具备前端基本技能的道路、学习方法、资料。由于能力有限，不能保证面面俱到，只是作为入门参考，面向初学者，让初学者少走弯路。</p>
<p>互联网的快速发展和激烈竞争，用户体验成为一个重要的关注点，导致专业前端工程师成为热门职业，各大公司对前端工程师的需求量都很大，要求也越来越高，优秀的前端工程师更是稀缺。个人感觉前端入门相对容易，但是也需要系统地认真学习，在打好基础后坚持学习，成为优秀前端工程师也只是时间问题。</p>
<p>学习任何知识最重要的都是<strong>兴趣</strong>，如果经过一段时间的学习感觉不喜欢，那可能强迫自己学习是很痛苦的，效果也不会好，毕竟这很可能就是以后很多年生存的技能。不过随着互联网行业的发展，前端必然是Web开发人员需要学习的知识，有时候是没有专业前端工程师一起合作的，所以即使不做专门的前端工程师，掌握基本的前端技能为工作带来方便。</p>
<p>后期邀请了一些同学分享学习经历。如果有同学愿意分享,欢迎push</p>
<a id="more"></a>
<h2 id="必备基础技能"><a href="#必备基础技能" class="headerlink" title="必备基础技能"></a>必备基础技能</h2><p><a href="https://github.com/JacksonTian/fks" target="_blank" rel="external">前端技能汇总</a>这个项目详细记录<br>了前端工程师牵涉到的各方面知识。在具备基本技能之后可以在里面找到学习<br>的方向，完善技能和知识面。</p>
<p><a href="https://github.com/dypsilon/frontend-dev-bookmarks" target="_blank" rel="external">frontend-dev-bookmarks</a>是老外总结的前端开发资源。覆盖面非常广。包括各种知识点、工具、技术，非常全面。</p>
<p>以下是个人觉得入门阶段应该熟练掌握的基础技能：</p>
<ul>
<li><a href="http://www.w3.org/TR/html401/cover.html#minitoc" target="_blank" rel="external">HTML4</a>，<a href="http://www.w3.org/TR/html5/#contents" target="_blank" rel="external">HTML5</a>语法、标签、语义</li>
<li><a href="http://www.w3.org/TR/CSS2/#minitoc" target="_blank" rel="external">CSS2.1</a>，<a href="http://www.w3.org/TR/2001/WD-css3-roadmap-20010523/#table" target="_blank" rel="external">CSS3</a>规范，与HTML结合实现各种布局、效果</li>
<li><a href="http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf" target="_blank" rel="external">Ecma-262</a>定义的javascript的语言核心，原生<a href="https://developer.mozilla.org/en-US/docs/Web/API" target="_blank" rel="external">客户端javascript</a>，<a href="https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model" target="_blank" rel="external">DOM操作</a>，<a href="https://developer.mozilla.org/en/docs/web/Guide/HTML/HTML5" target="_blank" rel="external">HTML5新增功能</a></li>
<li>一个成熟的客户端javascript库，推荐<a href="http://jquery.com/" target="_blank" rel="external">jquery</a></li>
<li>一门服务器端语言：如果有服务器端开发经验，使用已经会的语言即可，如果没有服务器端开发经验，熟悉Java可以选择Servlet，不熟悉的可以选PHP，能实现简单登陆注册功能就足够支持前端开发了，后续可能需要继续学习，最基本要求是实现简单的功能模拟，</li>
<li><a href="http://www.w3.org/Protocols/rfc2616/rfc2616.html" target="_blank" rel="external">HTTP</a></li>
</ul>
<p>在掌握以上基础技能之后，工作中遇到需要的技术也能快速学习。</p>
<h2 id="基本开发工具"><a href="#基本开发工具" class="headerlink" title="基本开发工具"></a>基本开发工具</h2><p>恰当的工具能有效提高学习效率，将重点放在知识本身，在出现问题时能快速定位并<br>解决问题，以下是个人觉得必备的前端开发工具：</p>
<ul>
<li><strong>文本编辑器</strong>：推荐<a href="http://www.sublimetext.com/" target="_blank" rel="external">Sublime Text</a>，支持各种插件、主题、设置，使用方便</li>
<li><strong>浏览器</strong>：推荐<a href="http://www.google.cn/chrome/?hl=zh-CN&amp;standalone=1" target="_blank" rel="external">Google Chrome</a>，更新快，对前端各种标准提供了非常好的支持</li>
<li><strong>调试工具</strong>：推荐Chrome自带的<a href="https://developer.chrome.com/devtools" target="_blank" rel="external">Chrome develop tools</a>，可以轻松查看DOM结构、样式，通过控制台输出调试信息，调试javascript，查看网络等</li>
<li><strong>辅助工具</strong>：PhotoShop编辑图片、取色，fireworks量尺寸，AlloyDesigner对比尺寸，以及前面的到的Chrome develop tools，</li>
<li><strong>翻墙工具</strong>：lantern, <del>壁虎漫步</del>（已被和谐）</li>
</ul>
<h2 id="学习方法和学习目标"><a href="#学习方法和学习目标" class="headerlink" title="学习方法和学习目标"></a>学习方法和学习目标</h2><p>方法：</p>
<ol>
<li>入门阶段反复阅读<strong>经典书籍的中文版</strong>，书籍中的每一个例子都动手实现并在浏览器中查看效果</li>
<li>在具备一定基础之后可以上网搜各种教程、demo，了解各种功能的实际用法和常见功能的实现方法</li>
<li>阅读HTML，CSS，Javascript标准全面完善知识点</li>
<li>阅读前端牛人的博客、文章提升对知识的理解</li>
<li>善用搜索引擎</li>
</ol>
<p>目标：</p>
<ol>
<li>熟记前面知识点部分的重要概念，结合学习经历得到自己的理解</li>
<li>熟悉常见功能的实现方法，如常见CSS布局，Tab控件等。</li>
</ol>
<h2 id="入门之路"><a href="#入门之路" class="headerlink" title="入门之路"></a>入门之路</h2><p>以下是入门阶段不错的书籍和资料</p>
<ol>
<li>HTML先看<a href="http://www.amazon.cn/gp/product/B00BMK4GKW/ref=s9_simh_gw_p14_d0_i2?pf_rd_m=A1AJ19PSB66TGU&amp;pf_rd_s=center-2&amp;pf_rd_r=1AH2NF64STS19GY8GR54&amp;pf_rd_t=101&amp;pf_rd_p=108773272&amp;pf_rd_i=899254051" target="_blank" rel="external">《HTML &amp; CSS: Design and Build Websites》</a>1-9章，然后<a href="http://www.amazon.cn/HTML5%E7%A7%98%E7%B1%8D-Matthew-MacDonald/dp/B009DFCZAQ/ref=sr_1_1?ie=UTF8&amp;qid=1414740812&amp;sr=8-1&amp;keywords=html5+the+missing+manual" target="_blank" rel="external">《HTML5: The Missing Manual》</a>1-4章。</li>
<li>CSS先看<a href="http://www.amazon.cn/CSS-The-Missing-Manual-Mcfarland-David-Sawyer/dp/0596802447/ref=sr_1_1?ie=UTF8&amp;qid=1414742710&amp;sr=8-1&amp;keywords=css+the+missing+manual+2" target="_blank" rel="external">《CSS: The Missing Manual》</a>，然后<a href="http://www.amazon.cn/CSS%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97-%E8%BF%88%E8%80%B6/dp/B0011F5SIC/ref=sr_1_1?ie=UTF8&amp;qid=1414744248&amp;sr=8-1&amp;keywords=css+%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97" target="_blank" rel="external">《CSS权威指南》</a></li>
<li>javascript先看<a href="http://www.amazon.cn/JavaScript%E9%AB%98%E7%BA%A7%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1-%E6%B3%BD%E5%8D%A1%E6%96%AF/dp/B007OQQVMY/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1414744358&amp;sr=1-1&amp;keywords=javascript+%E9%AB%98%E7%BA%A7%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1" target="_blank" rel="external">《javascript高级程序设计》</a>，然后<a href="http://www.amazon.cn/O-Reilly%E7%B2%BE%E5%93%81%E5%9B%BE%E4%B9%A6%E7%B3%BB%E5%88%97-JavaScript%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97-%E5%BC%97%E5%85%B0%E7%BA%B3%E6%A0%B9/dp/B007VISQ1Y/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1414744401&amp;sr=1-1&amp;keywords=javascript+%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97" target="_blank" rel="external">《javascript权威指南》</a></li>
<li>HTTP看<a href="http://www.amazon.cn/HTTP%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97-%E5%90%89%E5%B0%94%E5%88%A9/dp/B008XFDQ14/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1414744440&amp;sr=1-1&amp;keywords=HTTP+%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97" target="_blank" rel="external">HTTP权威指南</a></li>
<li>在整个学习过程中HTML CSS JavaScript会有很多地方需要互相结合，实际工作中也是这样，一个简单的功能模块都需要三者结合才能实现。</li>
<li>动手是学习的重要组成部分，书籍重点讲解知识点，例子可能不是很充足，这就需要利用搜索引擎寻找一些简单教程，照着教程实现功能。以下是一些比较好的教程网址<ul>
<li>可以搜索各大公司前端校招笔试面试题作为练习题或者他人总结的<a href="https://github.com/darcyclarke/Front-end-Developer-Interview-Questions/tree/master/Translations/Chinese" target="_blank" rel="external">前端面试题</a>还有<a href="https://github.com/qiu-deqing/FE-interview" target="_blank" rel="external">个人总结的面试题</a>（带参考答案）</li>
<li><a href="http://code.tutsplus.com" target="_blank" rel="external">http://code.tutsplus.com</a>有各种各样的教程</li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web" target="_blank" rel="external">MDN</a>也有很多教程，更重要的是里面有详细的文档，需要查找某个功能时在Google搜索：<code>xxx site:https://developer.mozilla.org</code></li>
<li><a href="http://www.html5rocks.com/zh/" target="_blank" rel="external">http://www.html5rocks.com/zh/</a>也有很多优质教程</li>
<li><a href="http://www.sitepoint.com/" target="_blank" rel="external">http://www.sitepoint.com/</a></li>
<li><a href="http://alistapart.com/" target="_blank" rel="external">http://alistapart.com/</a></li>
</ul>
</li>
<li>原生javascript是需要重点掌握的技能，在掌握原生javascript的基础上推荐熟练掌握jQuery，在实际工作中用处很大，这方面的书籍有<a href="http://www.amazon.com/Learning-jQuery-Fourth-Jonathan-Chaffer/dp/178216314X/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1410099243&amp;sr=1-1&amp;keywords=learning+jquery" target="_blank" rel="external">《Learning jQuery》</a>或者去<a href="http://learn.jquery.com/" target="_blank" rel="external">jQuery官网</a></li>
<li>建一个<a href="https://github.com/" target="_blank" rel="external">https://github.com/</a>账号，保存平时学习中的各种代码和项目。</li>
<li>有了一定基础之后可以搭建一个个人博客，记录学习过程中遇到的问题和解决方法，方便自己查阅也为其他人提供了帮助。也可以去<a href="http://www.cnblogs.com/" target="_blank" rel="external">http://www.cnblogs.com/</a>或者<a href="http://www.csdn.net/" target="_blank" rel="external">http://www.csdn.net/</a>这样的网站注册账号，方便实用</li>
<li>经常实用Google搜索英文资料应该经常找到来自<a href="http://stackoverflow.com/" target="_blank" rel="external">http://stackoverflow.com/</a>的高质量答案，遇到问题可以直接在这里搜索，如果有精力，注册一个账号为别人解答问题也能极大提高个人能力。</li>
<li>经典书籍熟读之后，可以打开前面必备基础技能部分的链接。认真读对应标准，全面掌握知识</li>
</ol>
<h2 id="继续提高"><a href="#继续提高" class="headerlink" title="继续提高"></a>继续提高</h2><p>有了前面的基础之后，前端基本算是入门了，这时候可能每个人心中都有了一些学习方向，如果还是没有。<br>可以参考前面必备技能部分提到的那两个项目，从里面选一些进行发展学习。以下是一些不错的方面：</p>
<ul>
<li><a href="http://gruntjs.com/" target="_blank" rel="external">Grunt</a>：前端自动化工具，提高工作效率</li>
<li><a href="http://lesscss.org/" target="_blank" rel="external">less css</a>：优秀的CSS预处理器</li>
<li><a href="http://getbootstrap.com/" target="_blank" rel="external">bootstrap</a>：优秀的CSS框架，对没有设计师的团队很不错，与less结合使用效果完美</li>
<li><a href="http://requirejs.org/" target="_blank" rel="external">requirejs</a>：AMD规范的模块加载器，前端模块化趋势的必备工具</li>
<li><a href="http://nodejs.org/" target="_blank" rel="external">Node.js</a>：JavaScript也可以做后台，前端工程师地位更上一步</li>
<li><a href="https://angularjs.org/" target="_blank" rel="external">AngularJS</a>：做Single Page Application的好工具</li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/Guide/Mobile" target="_blank" rel="external">移动端web开发</a>：智能手机的普及让移动端的流量正在逐步赶超PC端</li>
<li><a href="https://developer.chrome.com/devtools/docs/javascript-memory-profiling?hl=figoogle" target="_blank" rel="external">Javascript内存管理</a>：SPA长期运行需要注意内存泄露的问题</li>
<li><a href="http://www.amazon.com/Performance-JavaScript-Faster-Application-Interfaces/dp/059680279X/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=undefined&amp;sr=1-1&amp;keywords=high+performance+javascript" target="_blank" rel="external">High Performance JavaScript(Build Faster Web Application Interfaces)</a></li>
<li><a href="https://developer.yahoo.com/performance/rules.html" target="_blank" rel="external">Best Practices for Speeding Up Your Web Site</a>：重要技能</li>
</ul>
<h2 id="一些个人经历"><a href="#一些个人经历" class="headerlink" title="一些个人经历"></a>一些个人经历</h2><h3 id="LingyuCoder的学习经历"><a href="#LingyuCoder的学习经历" class="headerlink" title="LingyuCoder的学习经历"></a><a href="https://github.com/LingyuCoder" target="_blank" rel="external">LingyuCoder</a>的学习经历</h3><p>上面的大神都总结得差不多了，我这里就胡扯一些吧</p>
<h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><ul>
<li>chrome dev tools：前端开发调试利器，着重注意几个功能：<ul>
<li>console（废话）</li>
<li>elements:元素样式调整，很常用</li>
<li>sources：代码中添加断点，单步调试，以及单步调试过程中查看内存中的对象<ul>
<li>watch expression：通过表达式查看当前内存中的值</li>
<li>call stack：查看调用栈，开启async，可以看异步调用栈（这个非常有用，尤其是ajax调试的时候）</li>
<li>scope variables：作用域链上的变量，非常有用</li>
</ul>
</li>
<li>network：抓包查看每个请求，非常重要，前后端联调必备</li>
<li>timeline：分析渲染、js执行等等各个阶段，性能优化利器</li>
<li>emulation：模拟移动端环境，mobile页面开发必备</li>
<li>一些插件:<ul>
<li>liveload: 修改页面后自动刷新，不用按F5</li>
<li>dimensions：直接在页面上测量的利器</li>
<li>livestyle：css样式修改后自动起效果，不需要刷新，elements修改后也能同步到代码中</li>
<li>image tool：测量，取色</li>
<li>UC二维码：移动端调试扫码必备</li>
<li>pagespeed，YSlow：页面性能分析和优化插件</li>
<li>马克飞象：优秀的在线markdown编辑器，快速写周报，做记录</li>
</ul>
</li>
</ul>
</li>
<li>sublime text3：编码方便，插件多，速度快，性能好<ul>
<li>emmet：提升html编码速度必备</li>
<li>sublimelinter + 各种语言的lint和hint：代码纠错</li>
<li>一些snippets：自动补全，提升开发效率</li>
</ul>
</li>
<li>Intellij IDEA和WebStorm：集成开发环境，集成了各种功能，开发比sublime要方便，但会比较吃性能</li>
<li>Mark Men：测量、取色、标注利器，拿到视觉稿之后第一个打开的软件</li>
<li>GFW Fucker：我用红杏，可以的话买个虚拟服务器当梯子</li>
<li>iHosts：非常优秀的hosts管理软件，轻松修改hosts，开发调试必备</li>
<li>Charles：Mac 平台最好用的抓包分析工具</li>
<li>Rythem：AlloyTeam出品的代理抓包软件，非常轻量，安装简单，移动端（真机）开发调试很好用</li>
<li>Wunderlist：一个非常不错的Todo List，任务、需求多的时候管理起来很方便</li>
</ul>
<h3 id="技能"><a href="#技能" class="headerlink" title="技能"></a>技能</h3><p>前端的技能其实除了JavaScript（包括NodeJS）、HTML、CSS以外，还有很多。其实前端的技能树很大，这里只能列一些我开发中见到的说一说</p>
<h4 id="语言基础"><a href="#语言基础" class="headerlink" title="语言基础"></a>语言基础</h4><p>JavaScript：</p>
<ul>
<li>作用域链、闭包、运行时上下文、this</li>
<li>原型链、继承</li>
<li>NodeJS基础和常用API</li>
</ul>
<p>CSS：</p>
<ul>
<li>选择器</li>
<li>浏览器兼容性及常见的hack处理</li>
<li>CSS布局的方式和原理（盒子模型、BFC、IFC等等）</li>
<li>CSS 3，如animation、gradient、等等</li>
</ul>
<p>HTML：</p>
<ul>
<li>语义化标签</li>
</ul>
<h4 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h4><p>JavaScript:</p>
<ul>
<li>异步控制（Promise、ES6 generator、Async）</li>
<li>模块化的开发方式（AMD、CMD、KMD等等）</li>
<li>JavaScript解释器的一些相关知识<ul>
<li>异步IO实现</li>
<li>垃圾回收</li>
<li>事件队列</li>
</ul>
</li>
<li>常用框架使用及其原理<ul>
<li>jQuery：基于选择器的框架，但个人认为不能叫框架，应该算工具库，因为不具备模块加载机制，其中源码很适合阅读钻研</li>
<li>AngularJS/Avalon等MVVM框架：着重理解MVVM模式本身的理念和双向绑定的实现，如何解耦</li>
<li>underscore：优秀的工具库，方便的理解常用工具代码片段的实现</li>
<li>polymer/React: 组件化开发，面向未来，理解组件化开发的原理</li>
</ul>
</li>
</ul>
<p>CSS和HTML：主要是CSS3的特性和HTML5的特性，以及浏览器处理的流程和绘制原理</p>
<ul>
<li>DOM树、CSSOM树、渲染树的构建流程及页面渲染的过程</li>
<li>解析HTML、CSS、JavaScript时造成的阻塞</li>
<li>HTML5相关<ul>
<li>SVG及矢量图原理</li>
<li>Canvas开发及动画原理（帧动画）</li>
<li>Video和Audio</li>
</ul>
</li>
<li>flex box布局方式</li>
<li>icon fonts的使用</li>
</ul>
<p>常用NodeJs的package：</p>
<ul>
<li>koa</li>
<li>express</li>
<li>underscore</li>
<li>async</li>
<li>gulp</li>
<li>grunt</li>
<li>connect</li>
<li>request</li>
</ul>
<p>一些理念：</p>
<ul>
<li>响应式Web</li>
<li>优雅降级、渐进增强</li>
<li>网页可用性、可访问性、其中的意义</li>
<li>SEO搜索引擎优化，了解搜索引擎的原理</li>
<li>SPA的好处和问题</li>
</ul>
<p>性能优化：</p>
<ul>
<li>减少请求数量（sprite、combo）</li>
<li>善用缓存（application cache、http缓存、CDN、localstorage、sessionstorage，备忘录模式）</li>
<li>减少选择器消耗（从右到左），减少DOM操作（DOM和JavaScript解释器的分离）</li>
<li>CSS的回流与重绘</li>
</ul>
<h4 id="项目"><a href="#项目" class="headerlink" title="项目"></a>项目</h4><ul>
<li>版本管理：首推Git，用过Git都不会想用SVN了<ul>
<li>Git：本地版本管理的机制</li>
<li>SVN：远程中心的版本管理机制</li>
</ul>
</li>
<li>自动化构建：主要就是less、模板、coffee等的预处理以及对代码压缩和合并<ul>
<li>Gulp：基于流构建，速度快、模块质量好</li>
<li>Grunt：独立任务构建，速度慢，配置蛋疼，灵活性高</li>
</ul>
</li>
<li>预处理和模板引擎<ul>
<li>less：语法简单，但功能有限</li>
<li>jade、ejs、velocity等模板引擎，各有各的长处</li>
<li>coffee：python工程师最爱，我没用过</li>
</ul>
</li>
<li>环境搭建：主要是将线上代码映射到本地，并在本地启动一个demo服务器，至于模拟数据的mock，见仁见智了<ul>
<li>本地代理：ihosts</li>
</ul>
</li>
<li>自动化测试：在业务较为稳定的情况下，可以通过自动化测试来减少测试的事件，但需求较多的时候，维护测试用例的成本会很高，可能用自动化测试会起到反效果<ul>
<li>jasmine</li>
<li>mocha</li>
</ul>
</li>
<li>生态系统<ul>
<li>npm</li>
<li>bower</li>
<li>spm</li>
</ul>
</li>
<li>搭建一个属于自己的博客<ul>
<li>git pages</li>
<li>hexo</li>
<li>jekyll</li>
</ul>
</li>
</ul>
<h4 id="未来"><a href="#未来" class="headerlink" title="未来"></a>未来</h4><ul>
<li>Web Componets：面向未来的组件化开发方式<ul>
<li>HTML模板</li>
<li>Shadow DOM</li>
<li>Custom Elements</li>
<li>HTML Import</li>
</ul>
</li>
<li>移动端Native开发：这也是需要了解的，以后前端工程师会经常地和webview打交道，也要了解native开发</li>
</ul>
<h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><p>有些东西不是考敲码就能弄好的，我参与实习的时候感受到了很多，这些是我遇到的也是我感觉自己做的不好的地方</p>
<ul>
<li><strong>对于业务的思考</strong>：我个人这方面非常欠缺，所以放在最前面，在敲码前要多思考业务</li>
<li>交流和沟通能力：这个非常重要，前端同时需要与项目经理、产品、交互、后台打交道，沟通不善会导致很多无用功，延缓项目</li>
<li>知识管理、时间管理：input和output的平衡，output是最好的input。如何做好分享，参与社区，做好交流，作好记录</li>
<li>对新技术的渴望，以及敢于尝试</li>
</ul>
<h4 id="入门书"><a href="#入门书" class="headerlink" title="入门书"></a>入门书</h4><p>入门可以通过啃书，但书本上的东西很多都已经过时了，在啃书的同时，也要持续关注技术的新动态。这里推几本我觉着不错的书：</p>
<ul>
<li>《JavaScript高级编程》：可以作为入门书籍，但同时也是高级书籍，可以快速吸收基础，等到提升再回来重新看</li>
<li>《JavaScript权威指南》：不太适合入门，但是必备，不理解的地方就去查阅一下，很有帮助</li>
<li>《编写可维护的JavaScript》</li>
<li>《JavaScript DOM编程艺术》学习JavaScript和DOM开发的必读之作。</li>
<li>《Node.js开发指南》：不错的Nodejs入门书籍</li>
<li>《深入浅出Node.js》：Nodejs进阶书籍，必备</li>
<li>《JavaScript异步编程》：理解JS异步的编程理念</li>
<li>《JavaScript模式》和《JavaScript设计模式》：JavaScript的代码模式和设计模式，将开发思维转变到JavaScript，非常好的书</li>
<li>《JavaScript框架设计》：在用轮子同时，应当知道轮子是怎么转起来的，讲解很详细，从源码级别讲解框架的各个部分的实现，配合一个现有框架阅读，可以学到很多东西</li>
<li>《Don`t make me think》：网页设计的理念，了解用户行为，非常不错</li>
<li>《CSS禅意花园》：经久不衰的一部著作，同样传递了网页设计中的理念以及设计中需要注意的问题</li>
<li>《高性能JavaScript》和《高性能HTML5》：强调性能的书，其中不只是性能优化，还有很多原理层面的东西值得学习</li>
<li>《HTML5 Canvas核心技术》：我正在读的一本书，对于canvas的使用，动画的实现，以及动画框架的开发都非常有帮助</li>
<li>《HTTP权威指南》：HTTP协议相关必备，前端开发调试的时候也会经常涉及到其中的知识</li>
<li>《响应式Web设计》：技术本身不难，重要的是响应式网页的设计理念，以及移动先行的思想</li>
<li>《JavaScript语言精粹》：老道的书，也是普及JavaScript的开发思维的一本好书，非常适合入门</li>
</ul>
<h4 id="一些不错的网站"><a href="#一些不错的网站" class="headerlink" title="一些不错的网站"></a>一些不错的网站</h4><ul>
<li><a href="https://github.com" target="_blank" rel="external">github</a>：没啥好说的，多阅读别人的源码，多上传自己的源码，向世界各地的大牛学习</li>
<li><a href="http://codepen.io/" target="_blank" rel="external">codepen</a>：感受前端之美的必选之地，里面有很多酷炫的效果和优秀的插件</li>
<li><a href="http://www.echojs.com/" target="_blank" rel="external">echojs</a>：快速了解js新资讯的网站</li>
<li><a href="http://stackoverflow.com/" target="_blank" rel="external">stackoverflow</a>和<a href="segmentfault.com">segmentfault</a>：基本上各种问题都能在上面获得解答</li>
<li><a href="https://developers.google.com/web/fundamentals/" target="_blank" rel="external">google web fundamentals</a>：每篇文章都适合仔细阅读</li>
<li><a href="http://www.staticfile.org/" target="_blank" rel="external">static files</a>：开放的CDN，很好用</li>
<li><a href="http://www.iconfont.cn/" target="_blank" rel="external">iconfont</a>：阿里的矢量图标库，非常不错，支持CDN而且支持项目</li>
<li><a href="http://www.html5rocks.com/" target="_blank" rel="external">html5 rocks</a>: 一个不错的网站，很多浏览器的新特性以及前沿的技术，都能在这上面找到文章</li>
<li><a href="http://css-tricks.com/" target="_blank" rel="external">css tricks</a>：如何活用CSS，以及了解CSS新特性，这里可以满足你</li>
<li><a href="http://bonsaiden.github.io/JavaScript-Garden/zh/#object.general" target="_blank" rel="external">JavaScript 秘密花园</a> JavaScript初学必看，非常不错</li>
<li><a href="http://www.w3cplus.com/" target="_blank" rel="external">w3cplus</a>：一个前端学习的网站，里面的文章质量都挺不错的</li>
<li><a href="http://nodeschool.io/" target="_blank" rel="external">node school</a>：一个不错的node学习网站</li>
<li><a href="http://pcottle.github.io/learnGitBranching/?demo" target="_blank" rel="external">learn git branch</a>：一个git学习网站，交互很棒</li>
<li><a href="http://www.html-js.com/" target="_blank" rel="external">前端乱炖</a>：一个前端文章分享的社区，有很多优秀文章</li>
<li><a href="http://deerchao.net/tutorials/regex/regex.htm" target="_blank" rel="external">正则表达式</a>：一个正则表达式入门教程，非常值得一看</li>
<li><a href="http://www.ruanyifeng.com/blog/" target="_blank" rel="external">阮一峰的博客</a>和<a href="http://www.zhangxinxu.com/wordpress/" target="_blank" rel="external">张鑫旭的博客</a>：快速了解某些知识的捷径，但是如果需要深挖，还需要其他的资源</li>
<li>各路大牛的博客：这个太多了，就不贴了，知乎上有很全的</li>
<li>各种规范的官方网站，不懂得时候读规范</li>
</ul>
<h4 id="历程"><a href="#历程" class="headerlink" title="历程"></a>历程</h4><p>以前是做Java SSH的，半路出家做的前端，所以水平比较弱，遇到问题也比较多。基本上入门靠看书和<a href="http://www.w3school.com.cn/" target="_blank" rel="external">W3C School</a>上的教程，以及一些前端博客，如<a href="http://www.cnblogs.com/TomXu/" target="_blank" rel="external">汤姆大叔的博客</a>。以前也只是使用jQuery，原生js也没有太多的钻研，后来逐渐看了很多本动物书，比如老道的语言精粹等等。从这些书中学到了很多语言层面的知识。但这显然是不够的，所以我经常会去社区上看看大家在谈论什么，然后去看看相关的资料，感兴趣就会多找些资料看看，或者写一写demo。学CSS主要就是通过这种方式。后来开始更多的关注各路大牛的博客和一些比较深的书籍，以及关注一些新的知识和框架，并且不断地练手提交代码到github，这样也学到了很多知识。在实习的过程中，切身参与到实际项目开发之中，能学到很多在学校学不到的理念和思维，这点也有很大的帮助。不说了，我要去搬砖求offer了…</p>
<h3 id="MrRaindrop的学习经历"><a href="#MrRaindrop的学习经历" class="headerlink" title="MrRaindrop的学习经历"></a><a href="https://github.com/MrRaindrop" target="_blank" rel="external">MrRaindrop</a>的学习经历</h3><p>应<a href="https://github.com/qiu-deqing" target="_blank" rel="external">qiu神</a>的邀请分享一下前端学习经验，这里对前端知识体系架构就不做总结了，各位大神们的总结已经相当到位了，我就贡献几个个人认为还比较有用的链接大家研究研究就好，然后主要分享一下我在前端学习过程中遇到的问题和总结的经验教训吧，如果能帮到想要入门的FE初学者（我就姑且假定为本文的读者受众类型了），让他们少走点弯路，每走一步都知道自己下一步的方向，这是最好了。各位大神的总结和分享详见qiu神整理的<a href="https://github.com/qiu-deqing/FE-learning" target="_blank" rel="external">FE-learning</a>。</p>
<p>先说下，前端这个东西每个人都可以有适合自己的学习方法，这篇仅作参考，写的有点乱，各位凑合看。</p>
<h4 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h4><p>我是属于误打误撞进了前端，之前一直往做游戏的方向去来着，搞过游戏网站，玩过游戏引擎，比如unity，unreal这种商业引擎，捣鼓了几个游戏原型，不过自打研一进了实验室，直接就被导师派去写了js，导师给了我半个月时间让我写个基于百度地图api的数据展示页面，虽然这个时间还是相当宽裕的，不过之前没怎么写过js，也不会用地图api，于是我就一边啃着<a href="http://book.douban.com/subject/2228378/" target="_blank" rel="external">《Javascript权威指南》</a>（犀牛书）一边参考实验室前人留下的“代码”，总算是把功能都写出来了。那个页面算我的js入门作了，也是我前端学习路线的开始。</p>
<blockquote>
<p>现在想来，虽然指派了去做前端，但是一直做下去并做好还是得靠兴趣维持，当然前端是一个趣味性十足的技术领域，而且社区每天都很“热闹”。</p>
</blockquote>
<h4 id="项目，下一个项目"><a href="#项目，下一个项目" class="headerlink" title="项目，下一个项目"></a>项目，下一个项目</h4><p>我个人认为前端的学习，初学阶段你可以完全脱离开书本，以<strong>项目驱动</strong>。虽然我个人是从犀牛书开始啃的，不过如果你没有充足的时间，或者觉得啃大部头乏而无味的话，还是别像我这样。当然了如果决定啃书最好是把书里的例子都跟着敲一遍的。我上研之前没接触过js，4月份还没开学呢就被直接被导师甩了个百度地图api的项目到脸上，接着就是各种ERP，地图数据展示，虽然换着花样来一点不重样，不过基本上都是前端的活，SSH和android开发也打过酱油，整个实验室就我一个人写前端敢信？富客户端SPA时代的后端就是一个restful接口，代码量基本都在前端啊，写的我一个人怎一个爽字了得…期间跟着导师感受了一把创业，每天从7点搞到晚上10点，也算是经历了一段快速成长期。</p>
<blockquote>
<p>掌握一门技术先掌握它的大体框架，想一个能实现的点子，做一个能跑就行的demo，再去完善它的细节，等到demo完成了，对这门技术有了一个感性的认识，再去啃书，收获会大很多。我从开始原生js写到jquery，再到extjs，再到angularjs，从导师指定技术，到自己做技术选型，一个项目接着一个项目的练，就跟打怪升级似的。当然没有项目就去自己创造项目，动手实现自己的想法是件有乐趣和成就感的事。</p>
</blockquote>
<h4 id="收集癖和知识管理"><a href="#收集癖和知识管理" class="headerlink" title="收集癖和知识管理"></a>收集癖和知识管理</h4><p>前端学习有个特点，很多东西都很零碎，分散，需要你自己去整理、归纳和总结。在微博、知乎上follow了众多的大神，你不仅仅是为了听八卦，大神们的只言片语有时候留下的是无尽的余味，很有可能一个不经意提到的一个词就成为你下一个学习的目标。<strong>收集这些信息，善用google，提问，思考。</strong>就像游戏里的收集要素，前端学习也是充满搜集要素的一个“游戏”，只不过你需要一个知识管理工具来充当物品栏和仓库，我所知道的大牛们无一不是知识管理工具的重度使用者。以前用的oneNote，那时候还没绑定到云存储，现在基本上用evernote，笔记已经累计到1200+篇。书签一直打算用delicious，因为它是基于tag管理的，但一直没用起来。当然重点不在于这些工具，但是趁手的工具可以提高你的学习效率。最关键当然是随时<strong>保持旺盛的学习欲望</strong>，你的目标是了解有关前端的一切（当然不是所有都要掌握，因为毕竟你的精力有限，而且现实的说这也不太可能）。</p>
<h4 id="跟对神"><a href="#跟对神" class="headerlink" title="跟对神"></a>跟对神</h4><p>这个可控性貌似不大…跟对老大这个就不多说了，一定程度要看造化。不过话说回来，多跟身边的高手交流是王道，这个高手不一定要多高，但是一定要对技术有热情。研一的时候热情高涨，每天7点进实验室门，然后发现有个家伙居然比我还早到。后来发现这家伙上午就走了，下午又来了，而且导师对此习以为常，原来这家伙晚上不睡觉通宵写代码，上午才跑回去睡。后来经常和这位神讨论问题，每次感觉经验值蹭蹭蹭的往上涨。然后实验室还有一位神，被前面这位通宵神形容为“只能望其项背，一直在追赶，从来没赶上”，两位神的特点都是什么都了解一点，所以什么都能跟你讨论得起来，我有段时间做了个读书计划，从c/c++到vc/mfc再到unix网络编程，最后一路看到java核心技术和MSDN上的C#编程指南，和神们也能扯得很high了。</p>
<blockquote>
<p>总之就是这两位神把我拉进了坑，或者说从一个坑跳进另一坑，虽然两位神都不是搞前端的，不过技术之间总有相通之处。</p>
</blockquote>
<h4 id="读书"><a href="#读书" class="headerlink" title="读书"></a>读书</h4><p>读书，多读书，读好书。在<a href="http://mindhacks.cn/topics/learning-method/" target="_blank" rel="external">刘未鹏的博客</a>里看到过一个公式，<strong>你第一个月的工资等于之前买过（读过）的技术书价格总和</strong>（这里说的技术书指那些经典的公认的好书）。讨论这个公式的正确性似乎没什么意义，然而它的合理性是毋庸置疑的，那就是多读经典技术书。最极端的一个例子，google的徐宥在<a href="http://blog.youxu.info/2009/08/06/my-undergraduate-year/" target="_blank" rel="external">我的大学</a>里面说他扫荡了图书馆的整个TP312书架…对于前端的经典书籍，后面列了一个我收集的<a href="http://book.douban.com/doulist/13701898/" target="_blank" rel="external">前端书列</a>（如果有遗漏的前端经典好书，还请留言告诉我），有条件可以尝试刷一遍这些书，我也是在找完整的时间去啃完它们。之前说的，前端知识点松散，收集零散的知识点，从博客里快速学习等，这些只是前端学习的一个方面，如果你要想深入理解一个知识体系，了解它的来龙去脉，对它建立系统认识，读经典书还是必不可少的。</p>
<p>我从最开始啃完犀牛书，然后接着去看了其他一些和前端干系不大的经典技术书，再后来通过实验室的项目和自己弄的一些小项目逐渐对前端领域比较上路以后，又看了《Javascript模式》、《Javascript设计模式》、《编写可维护的Javascript》，后来了解到node并开始用node搞点小玩意儿，又看了本《NodeJS up and run》和《Mongodb权威指南》，不过感觉前者略坑。那会儿朴灵那本深入浅出（晒书么么哒）还没出，后来出了就去图书馆借来看完，这么看下来感觉还不错，不过感觉看的还是偏少了，还需要继续刷（参照上面的书列）。</p>
<h4 id="前端的定位"><a href="#前端的定位" class="headerlink" title="前端的定位"></a>前端的定位</h4><p>前端的定位关乎到你需要吸收什么样的知识和技能，决定在技术世界里你对什么需要格外敏感。如果你认为前端仅仅停留在切页面，实现交互和视觉的要求，那你对前端的认识还停留在初级阶段。阿里终面的时候我问了考官这么个问题：前端技术日新月异，范围越扩越宽，标准越来越丰富，似乎任何一个触角都能伸出很远。怎么给前端一个合适的定位？考官给我分析了半天，然后总结成一句话，就是用户和网站的联结者，用户体验的创造者（原话不是这样，但大体是这个意思）。也就是说前端的终极目标其实就是创造用户体验，提升用户体验，<strong>以用户体验为中心</strong>。不管你是从交互设计上下手，还是从性能优化出发，或者改进工作流提升工作流效率，最终都是为了创造和提升用户体验，最终都要体现到用户体验这一点上来。我认为这个总结非常有道理（当然“用户体验”这个词太宽泛了，并且不仅仅是前端工程师的范畴，比如开发后台的时候对一个数据处理过程进行优化，提升了整体性能，这也是对用户体验的一个提升）。</p>
<p>现在的前端工程师做到一定阶段不可避免会接触到很多比切页面、实现视觉要求、实现交互等更深入的问题，比如前端自动化、图像编程、性能优化等等，再往后推一点就是PHP/JSP/ASP/nodeJs，过去后端模板一般属于后端的范畴，现在随着<a href="https://github.com/lifesinger/lifesinger.github.com/issues/184" target="_blank" rel="external">前端架构的演进</a>，可能会让你去写后端模板的代码，需要用到后端语言（PHP/Java/C#等），这就是所谓<strong>大前端</strong>（然而这与前端的定位并不是相背离的，大前端处理的依然是与用户接触的部分，仍然是对用户体验的优化）。可能最常见或者被谈论最多的就是node，其实这几种技术选型都可以，bat三家据说百度用PHP比较多，阿里用node比较多。</p>
<p>玉伯在<a href="https://github.com/lifesinger/lifesinger.github.com/labels/blog" target="_blank" rel="external">他的博客</a>里提过所谓全端是横向的，全栈是纵向的。<strong>全端</strong>即所有的终端说白了都是前端，因为都关乎到用户体验，直接和用户接触。适应多终端的开发，要求你在web前端的基础上，可能还要去扩展android开发和ios开发的知识，好在由于hybrid开发方式的流行，对使用native语言开发的技能会要求的不那么深入。</p>
<p><strong>全栈</strong>可以说是最适合初创公司的一种发展类型，广义上认为是从前端干到后端，从开发干到运维，这种就不说了，一般人应该不会想要去往这个方向发展，想要成为这种意义上的full-stack dev的，可能用不着来看我这篇文章了；而狭义上的全栈特指使用js语言从前端写到架设在nodeJs上的后端，前后端统一语言，统一编程模型，甚至公用同一套代码。更多了解全栈开发可以看看玉伯这篇<a href="https://github.com/lifesinger/lifesinger.github.com/issues/185" target="_blank" rel="external">说说全栈工程师</a>。</p>
<p>以上是我对前端以及衍生出来的技术路线的一些浅薄理解，学习一个领域掌握它的整体上的走向和趋势还是挺重要的。另外如果想要对前端学习方向、职业成长路径有一个整体的认识，推荐看看拔赤总结的这篇<a href="https://github.com/jayli/jayli.github.com/issues/1" target="_blank" rel="external">前端开发十日谈</a>。</p>
<h4 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h4><p>贡献几个对前端学习、面试有帮助的链接：</p>
<ul>
<li><a href="https://github.com/darcyclarke/Front-end-Developer-Interview-Questions" target="_blank" rel="external">前端面试问题合集（Front-end-Developer-Interview-Questions）</a></li>
<li><a href="https://github.com/JacksonTian/fks" target="_blank" rel="external">前端技能汇总（JacksonTian）</a></li>
<li><a href="http://www.f2er.info/" target="_blank" rel="external">另一张前端技能汇总图</a></li>
<li><a href="http://book.douban.com/doulist/13701898/" target="_blank" rel="external">前端那点事儿（书列）</a></li>
</ul>
<h3 id="byr论坛yiyizym的建议"><a href="#byr论坛yiyizym的建议" class="headerlink" title="byr论坛yiyizym的建议"></a>byr论坛yiyizym的建议</h3><p>与grunt相比，学习gulp会比较简单</p>
<p>做SPA的话，推荐backbone.js和 backbone.marionette.js</p>
<p>翻墙不用折腾，花十块钱买一个月的 红杏。</p>
<p>把基础打扎实了再学这些都没问题。</p>
<p>html 没什么好说的，有空学学html5。</p>
<p>css 尽量看<a href="http://www.w3.org/TR/CSS21/cover.html#minitoc" target="_blank" rel="external">文档</a> ，因为很多中文资料都各执一辞，看多了反而会糊涂。</p>
<p>有个<a href="http://caniuse.com/" target="_blank" rel="external">网站</a>可以查找html/css标签、属性在各个浏览器中的支持情况，挺好用的。</p>
<p>javascript 就看 javascript高级程序设计 。不过这么厚的书看过就会忘。对javascript核心概念的讲解：对象/原型链/         构造函数/执行上下文/作用域链/闭包/this，<a href="http://weizhifeng.net/javascript-the-core.html" target="_blank" rel="external">这里</a>有篇不错的文章。</p>
<p>有闲情可以看看 ecmascript 6。<a href="http://es6.ruanyifeng.com/" target="_blank" rel="external">阮一峰的网站</a>有入门资料。</p>
<p>jquery 有很多 API,<a href="http://www.css88.com/jqapi-1.9/" target="_blank" rel="external">这个网站</a>可以方便查到。有时间弄清楚jquery deferred 的用法。</p>
<p>多给 sublimetext 装插件，比如说检查代码错误的，新建目录文件的，整理代码的。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://liyi.wiki/posts/16107.html</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>或者<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo s</div></pre></td></tr></table></figure></p>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[苍老师全裸艺术写真合集]]></title>
      <url>http://liyi.wiki/posts/45135.html</url>
      <content type="html"><![CDATA[<p><img src="/uploads/kidding.png" alt="你果然是个淫荡的人"></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Ubuntu下忘记以root权限打开是的保存操作-vim命令]]></title>
      <url>http://liyi.wiki/posts/7606.html</url>
      <content type="html"><![CDATA[<h1 id="在你忘记用-root-方式打开文件时的文件保存"><a href="#在你忘记用-root-方式打开文件时的文件保存" class="headerlink" title="在你忘记用 root 方式打开文件时的文件保存"></a>在你忘记用 root 方式打开文件时的文件保存</h1><p>每当你打开一个你没有写入权限的文件（比如系统配置文件）并做了一些修改，Vim 无法通过普通的 <strong><code>:w</code></strong> 命令来保存。你不需要重新以 root 方式打开文件再进行修改，只需要运行：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">:w !sudo tee %</div></pre></td></tr></table></figure></p>
<p>这会直接以 root 方式保存。</p>
<blockquote>
<p>Mac 和 Ubuntu 亲测通过</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Git与ssh-key多账户配置]]></title>
      <url>http://liyi.wiki/posts/52220.html</url>
      <content type="html"><![CDATA[<h1 id="Git与ssh-key多账户配置"><a href="#Git与ssh-key多账户配置" class="headerlink" title="Git与ssh-key多账户配置"></a>Git与ssh-key多账户配置</h1><h2 id="生成key"><a href="#生成key" class="headerlink" title="生成key"></a>生成key</h2><p>终端下 cd 到 ~/.ssh/ 目录下，执行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -C <span class="string">'ileeyi@163.com'</span> <span class="_">-f</span> id_rsa_github</div></pre></td></tr></table></figure></p>
<p>其中 <strong><code>ileeyi@163.com</code></strong> 替换为你的邮箱， <strong><code>id_rsa_github</code></strong> 为生成文件文件名，执行后会问你是否需要 enter a passphrase， 默认一路确认就行。</p>
<a id="more"></a>
<h2 id="添加到-ssh-agent"><a href="#添加到-ssh-agent" class="headerlink" title="添加到 ssh-agent"></a>添加到 ssh-agent</h2><p>将新生成的key 添加到 <strong>ssh-agent</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ssh-agent <span class="_">-s</span></div><div class="line">ssh-add ~/.ssh/id_rsa_github</div></pre></td></tr></table></figure></p>
<p>同时也可以通过命令 <code>ssh-add -l</code> 查看之前已添加的key。</p>
<h2 id="添加公匙到账户"><a href="#添加公匙到账户" class="headerlink" title="添加公匙到账户"></a>添加公匙到账户</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">clip &lt; ~/.ssh/id_rsa_github.pub</div></pre></td></tr></table></figure>
<p>重复执行以上步骤<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -C <span class="string">'biao166@qq.com'</span> <span class="_">-f</span> id_rsa_oschina</div></pre></td></tr></table></figure></p>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> ~/.ssh/</div><div class="line">touch config</div><div class="line">vim config</div></pre></td></tr></table></figure>
<p>配置如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">Host *.github.com</div><div class="line">    HostName github.com</div><div class="line">    IdentityFile ~/.ssh/id_rsa_github</div><div class="line">    User biao166</div><div class="line">Host *.git.oschina.net</div><div class="line">    HostName git.oschina.net</div><div class="line">    IdentityFile ~/.ssh/id_rsa_oschina</div><div class="line">    User biao166</div></pre></td></tr></table></figure></p>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ssh -vT git@github.com</div><div class="line">ssh -vT git@git.oschina.com</div></pre></td></tr></table></figure>
<h2 id="有可能碰到的问题"><a href="#有可能碰到的问题" class="headerlink" title="有可能碰到的问题"></a>有可能碰到的问题</h2><blockquote>
<p>Could not open a connection to your authentication agent?<br>应该是 <code>ssh-agent</code> 没有启动，执行以下命令启动<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">eval</span> ssh-agent <span class="_">-s</span></div><div class="line">ssh-add</div></pre></td></tr></table></figure></p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[使用homebrew搭建PHP,Nginx(LNMP开发环境)]]></title>
      <url>http://liyi.wiki/posts/41985.html</url>
      <content type="html"><![CDATA[<h2 id="安装PHP"><a href="#安装PHP" class="headerlink" title="安装PHP"></a>安装PHP</h2><h3 id="添加brew的PHP扩展库："><a href="#添加brew的PHP扩展库：" class="headerlink" title="添加brew的PHP扩展库："></a>添加brew的PHP扩展库：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">brew update</div><div class="line">brew tap homebrew/dupes</div><div class="line">brew tap josegonzalez/homebrew-php</div></pre></td></tr></table></figure>
<a id="more"></a>
<p>可以使用brew options php55命令来查看安装php5.5的选项，这里我用下面的选项安装：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install php55</div></pre></td></tr></table></figure></p>
<h3 id="由于Mac自带了php和php-fpm，因此需要添加系统环境变量PATH来替代自带PHP版本。"><a href="#由于Mac自带了php和php-fpm，因此需要添加系统环境变量PATH来替代自带PHP版本。" class="headerlink" title="由于Mac自带了php和php-fpm，因此需要添加系统环境变量PATH来替代自带PHP版本。"></a>由于Mac自带了php和php-fpm，因此需要添加系统环境变量PATH来替代自带PHP版本。</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span> <span class="string">'export PATH="$(brew --prefix php55)/bin:$PATH"'</span> &gt;&gt; ~/.bash_profile  <span class="comment">#for php</span></div><div class="line"><span class="built_in">echo</span> <span class="string">'export PATH="$(brew --prefix php55)/sbin:$PATH"'</span> &gt;&gt; ~/.bash_profile  <span class="comment">#for php-fpm</span></div><div class="line"><span class="built_in">echo</span> <span class="string">'export PATH="/usr/local/bin:/usr/local/sbib:$PATH"'</span> &gt;&gt; ~/.bash_profile <span class="comment">#for other brew install soft</span></div><div class="line"><span class="built_in">source</span> ~/.bash_profile</div></pre></td></tr></table></figure>
<h3 id="测试一下效果："><a href="#测试一下效果：" class="headerlink" title="测试一下效果："></a>测试一下效果：</h3><h4 id="Mac自带的PHP"><a href="#Mac自带的PHP" class="headerlink" title="Mac自带的PHP"></a>Mac自带的PHP</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">/usr/bin/php -v</div><div class="line"></div><div class="line">PHP 5.4.24 (cli) (built: Jan 19 2014 21:32:15) </div><div class="line">Copyright (c) 1997-2013 The PHP Group</div><div class="line">Zend Engine v2.4.0, Copyright (c) 1998-2013 Zend Technologies</div></pre></td></tr></table></figure>
<h4 id="Mac自带的php-fpm"><a href="#Mac自带的php-fpm" class="headerlink" title="Mac自带的php-fpm"></a>Mac自带的php-fpm</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">/usr/sbin/php-fpm -v</div><div class="line"></div><div class="line">&gt; PHP 5.4.24 (fpm-fcgi) (built: Jan 19 2014 21:32:57)</div><div class="line">Copyright (c) 1997-2013 The PHP Group</div><div class="line">Zend Engine v2.4.0, Copyright (c) 1998-2013 Zend Technologies</div></pre></td></tr></table></figure>
<h4 id="brew安装的php-他在-usr-local-opt-php55-bin-php"><a href="#brew安装的php-他在-usr-local-opt-php55-bin-php" class="headerlink" title="brew安装的php 他在/usr/local/opt/php55/bin/php"></a>brew安装的php 他在/usr/local/opt/php55/bin/php</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">php -v</div><div class="line"></div><div class="line">PHP 5.5.14 (cli) (built: Jul 16 2014 15:43:06) (DEBUG)</div><div class="line">Copyright (c) 1997-2014 The PHP Group</div><div class="line">Zend Engine v2.5.0, Copyright (c) 1998-2014 Zend Technologies</div><div class="line">    with Zend OPcache v7.0.3, Copyright (c) 1999-2014, by Zend Technologies</div><div class="line">    with Xdebug v2.2.5, Copyright (c) 2002-2014, by Derick Rethans</div></pre></td></tr></table></figure>
<h4 id="brew安装的php-fpm-他在-usr-local-opt-php55-sbin-php-fpm"><a href="#brew安装的php-fpm-他在-usr-local-opt-php55-sbin-php-fpm" class="headerlink" title="brew安装的php-fpm 他在/usr/local/opt/php55/sbin/php-fpm"></a>brew安装的php-fpm 他在/usr/local/opt/php55/sbin/php-fpm</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">php-fpm -v</div><div class="line"></div><div class="line">PHP 5.5.14 (fpm-fcgi) (built: Jul 16 2014 15:43:12) (DEBUG)</div><div class="line">Copyright (c) 1997-2014 The PHP Group</div><div class="line">Zend Engine v2.5.0, Copyright (c) 1998-2014 Zend Technologies</div><div class="line">    with Zend OPcache v7.0.3, Copyright (c) 1999-2014, by Zend Technologies</div><div class="line">    with Xdebug v2.2.5, Copyright (c) 2002-2014, by Derick Rethans</div></pre></td></tr></table></figure>
<h2 id="修改php-fpm配置文件"><a href="#修改php-fpm配置文件" class="headerlink" title="修改php-fpm配置文件"></a>修改php-fpm配置文件</h2><blockquote>
<p><strong><code>vim /usr/local/etc/php/5.5/php-fpm.conf</code></strong>，找到pid相关大概在25行，去掉注释 <strong><code>pid = run/php-fpm.pid</code></strong>, 那么php-fpm的pid文件就会自动产生在<strong><code>/usr/local/var/run/php-fpm.pid</code></strong>，下面要安装的Nginx pid文件也放在这里。</p>
</blockquote>
<h3 id="测试配置"><a href="#测试配置" class="headerlink" title="测试配置"></a>测试配置</h3><h4 id="测试php-fpm配置"><a href="#测试php-fpm配置" class="headerlink" title="测试php-fpm配置"></a>测试php-fpm配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">php-fpm -t</div><div class="line">php-fpm -c /usr/<span class="built_in">local</span>/etc/php/5.5/php.ini -y /usr/<span class="built_in">local</span>/etc/php/5.5/php-fpm.conf -t</div></pre></td></tr></table></figure>
<h4 id="启动php-fpm"><a href="#启动php-fpm" class="headerlink" title="启动php-fpm"></a>启动php-fpm</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">php-fpm -D</div><div class="line">php-fpm -c /usr/<span class="built_in">local</span>/etc/php/5.5/php.ini -y /usr/<span class="built_in">local</span>/etc/php/5.5/php-fpm.conf -D</div></pre></td></tr></table></figure>
<h4 id="关闭php-fpm"><a href="#关闭php-fpm" class="headerlink" title="关闭php-fpm"></a>关闭php-fpm</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">kill</span> -INT `cat /usr/<span class="built_in">local</span>/var/run/php-fpm.pid`</div></pre></td></tr></table></figure>
<h4 id="重启php-fpm"><a href="#重启php-fpm" class="headerlink" title="重启php-fpm"></a>重启php-fpm</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">kill</span> -USR2 `cat /usr/<span class="built_in">local</span>/var/run/php-fpm.pid`</div></pre></td></tr></table></figure>
<h4 id="也可以用上文提到的brew命令来重启php-fpm，不过他官方不推荐用这个命令了"><a href="#也可以用上文提到的brew命令来重启php-fpm，不过他官方不推荐用这个命令了" class="headerlink" title="也可以用上文提到的brew命令来重启php-fpm，不过他官方不推荐用这个命令了"></a>也可以用上文提到的brew命令来重启php-fpm，不过他官方不推荐用这个命令了</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew services restart php55</div></pre></td></tr></table></figure>
<h2 id="PHP-FPM开机启动："><a href="#PHP-FPM开机启动：" class="headerlink" title="PHP-FPM开机启动："></a>PHP-FPM开机启动：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ln -sfv /usr/<span class="built_in">local</span>/opt/php55/*.plist ~/Library/LaunchAgents</div><div class="line">launchctl load ~/Library/LaunchAgents/homebrew.mxcl.php55.plist</div></pre></td></tr></table></figure>
<h2 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install nginx --with-http_geoip_module</div></pre></td></tr></table></figure>
<h2 id="Nginx启动关闭命令："><a href="#Nginx启动关闭命令：" class="headerlink" title="Nginx启动关闭命令："></a>Nginx启动关闭命令：</h2><h3 id="测试配置是否有语法错误"><a href="#测试配置是否有语法错误" class="headerlink" title="测试配置是否有语法错误"></a>测试配置是否有语法错误</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nginx -t</div></pre></td></tr></table></figure>
<h3 id="打开-nginx"><a href="#打开-nginx" class="headerlink" title="打开 nginx"></a>打开 nginx</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo nginx</div></pre></td></tr></table></figure>
<h3 id="重新加载配置-重启-停止-退出-nginx"><a href="#重新加载配置-重启-停止-退出-nginx" class="headerlink" title="重新加载配置|重启|停止|退出 nginx"></a>重新加载配置|重启|停止|退出 nginx</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nginx <span class="_">-s</span> reload|reopen|stop|quit</div></pre></td></tr></table></figure>
<h3 id="也可以使用Mac的launchctl来启动-停止"><a href="#也可以使用Mac的launchctl来启动-停止" class="headerlink" title="也可以使用Mac的launchctl来启动|停止"></a>也可以使用Mac的launchctl来启动|停止</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">launchctl unload ~/Library/LaunchAgents/homebrew.mxcl.nginx.plist</div><div class="line">launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.nginx.plist</div></pre></td></tr></table></figure>
<h3 id="Nginx开机启动"><a href="#Nginx开机启动" class="headerlink" title="Nginx开机启动"></a>Nginx开机启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ln -sfv /usr/<span class="built_in">local</span>/opt/nginx/*.plist ~/Library/LaunchAgents</div><div class="line">launchctl load ~/Library/LaunchAgents/homebrew.mxcl.nginx.plist</div></pre></td></tr></table></figure>
<h3 id="Nginx监听80端口需要root权限执行，因此："><a href="#Nginx监听80端口需要root权限执行，因此：" class="headerlink" title="Nginx监听80端口需要root权限执行，因此："></a>Nginx监听80端口需要root权限执行，因此：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo chown root:wheel /usr/<span class="built_in">local</span>/Cellar/nginx/1.6.0_1/bin/nginx</div><div class="line">sudo chmod u+s /usr/<span class="built_in">local</span>/Cellar/nginx/1.6.0_1/bin/nginx</div></pre></td></tr></table></figure>
<h2 id="配置nginx-conf"><a href="#配置nginx-conf" class="headerlink" title="配置nginx.conf"></a>配置nginx.conf</h2><h3 id="创建需要用到的目录："><a href="#创建需要用到的目录：" class="headerlink" title="创建需要用到的目录："></a>创建需要用到的目录：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">mkdir -p /usr/<span class="built_in">local</span>/var/logs/nginx</div><div class="line">mkdir -p /usr/<span class="built_in">local</span>/etc/nginx/sites-enabled</div><div class="line">mkdir -p /usr/<span class="built_in">local</span>/etc/nginx/conf.d</div><div class="line">sudo mkdir -p /var/www</div><div class="line">sudo chown :staff /var/www</div><div class="line">sudo chmod 775 /var/www</div></pre></td></tr></table></figure>
<h3 id="vim-usr-local-etc-nginx-nginx-conf-输入以下内容"><a href="#vim-usr-local-etc-nginx-nginx-conf-输入以下内容" class="headerlink" title="vim /usr/local/etc/nginx/nginx.conf 输入以下内容:"></a><strong><code>vim /usr/local/etc/nginx/nginx.conf</code></strong> 输入以下内容:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">worker_processes  1;</div><div class="line">error_log   /usr/local/var/logs/nginx/error.log debug;</div><div class="line">pid        /usr/local/var/run/nginx.pid;</div><div class="line"></div><div class="line">events &#123;</div><div class="line">    worker_connections  256;</div><div class="line">&#125;</div><div class="line"></div><div class="line">http &#123;</div><div class="line">    include       mime.types;</div><div class="line">    default_type  application/octet-stream;</div><div class="line"></div><div class="line">    log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</div><div class="line">                      &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</div><div class="line">                      &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</div><div class="line"></div><div class="line">    access_log  /usr/local/var/logs/access.log  main;</div><div class="line"></div><div class="line">    sendfile        on;</div><div class="line">    keepalive_timeout  65;</div><div class="line">    port_in_redirect off;</div><div class="line"></div><div class="line">    include /usr/local/etc/nginx/sites-enabled/*.conf;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="nginx虚拟主机准备工作-创建-info-php-index-html-404-html-403-html文件到-var-www-下面"><a href="#nginx虚拟主机准备工作-创建-info-php-index-html-404-html-403-html文件到-var-www-下面" class="headerlink" title="nginx虚拟主机准备工作 - 创建 info.php index.html 404.html 403.html文件到 /var/www 下面"></a>nginx虚拟主机准备工作 - 创建 info.php index.html 404.html 403.html文件到 /var/www 下面</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">vi /var/www/info.php</div><div class="line">vi /var/www/index.html</div><div class="line">vi /var/www/403.html</div><div class="line">vi /var/www/404.html</div></pre></td></tr></table></figure>
<h3 id="创建默认虚拟主机default"><a href="#创建默认虚拟主机default" class="headerlink" title="创建默认虚拟主机default"></a>创建默认虚拟主机default</h3><p><strong><code>vim /usr/local/etc/nginx/sites-available/default</code></strong>输入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">    listen       80;</div><div class="line">    server_name  localhost;</div><div class="line">    root         /var/www/;</div><div class="line"></div><div class="line">    access_log  /usr/local/var/logs/nginx/default.access.log  main;</div><div class="line"></div><div class="line">    location / &#123;</div><div class="line">        index  index.html index.htm index.php;</div><div class="line">        autoindex   on;</div><div class="line">        if (!-f $request_filename)&#123;</div><div class="line">            rewrite ^.*$ /index.php last;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    location ~ \.php$ &#123;</div><div class="line">        try_files                   $uri = 404;</div><div class="line">        fastcgi_pass                127.0.0.1:9000;</div><div class="line">        fastcgi_index               index.php;</div><div class="line">        fastcgi_intercept_errors    on;</div><div class="line">        include /usr/local/etc/nginx/fastcgi.conf;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    location = /info &#123;</div><div class="line">        allow   127.0.0.1;</div><div class="line">        deny    all;</div><div class="line">        rewrite (.*) /.info.php;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    error_page  404     /404.html;</div><div class="line">    error_page  403     /403.html;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[launchpad自定义行列数Dock]]></title>
      <url>http://liyi.wiki/posts/32967.html</url>
      <content type="html"><![CDATA[<h2 id="打开终端应用，并输入下列指令："><a href="#打开终端应用，并输入下列指令：" class="headerlink" title="打开终端应用，并输入下列指令："></a>打开终端应用，并输入下列指令：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">defaults write com.apple.dock springboard-columns -int X;defaults write com.apple.dock springboard-rows -int X;defaults write com.apple.dock ResetLaunchPad -bool TRUE;killall Dock</div></pre></td></tr></table></figure>
<blockquote>
<p>将上述指令中的X替换为数字，第一个 X 代表列，第二个 X 代表行,默认7*5</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Ubuntu安装JDK]]></title>
      <url>http://liyi.wiki/posts/16716.html</url>
      <content type="html"><![CDATA[<h1 id="Ubuntu安装JDK"><a href="#Ubuntu安装JDK" class="headerlink" title="Ubuntu安装JDK"></a>Ubuntu安装JDK</h1><h2 id="第一步，下载Linux版JDK"><a href="#第一步，下载Linux版JDK" class="headerlink" title="第一步，下载Linux版JDK"></a>第一步，下载Linux版JDK</h2><p>可以通过访问Oracle官网下载，或者直接通过命令行下载。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget -c http://download.oracle.com/otn-pub/java/jdk/8u11-b12/jdk-8u11-linux-i586.tar.gz</div></pre></td></tr></table></figure></p>
<a id="more"></a>
<h2 id="第二步，解压安装"><a href="#第二步，解压安装" class="headerlink" title="第二步，解压安装"></a>第二步，解压安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">mkdir -p /usr/lib/jvm</div><div class="line">sudo mv jdk-8u11-linux-i586.tar.gz /usr/lib/jvm</div><div class="line"><span class="built_in">cd</span> /usr/lib/jvm</div><div class="line">sudo tar xzvf jdk-8u11-linux-i586.tar.gz</div><div class="line">sudo ln <span class="_">-s</span> jdk1.8.0_11 java-8</div></pre></td></tr></table></figure>
<h2 id="第三步，设置环境变量"><a href="#第三步，设置环境变量" class="headerlink" title="第三步，设置环境变量"></a>第三步，设置环境变量</h2><p>在系统中添加环境变量，主要是PATH、CLASSPATH和JAVA_HOME。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi ~/.bashrc</div></pre></td></tr></table></figure></p>
<p>在文件最后加入<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">export</span> JAVA_HOME=/usr/lib/jvm/java-8</div><div class="line"><span class="built_in">export</span> JRE_HOME=<span class="variable">$&#123;JAVA_HOME&#125;</span>/jre</div><div class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$&#123;JAVA_HOME&#125;</span>/lib:<span class="variable">$&#123;JRE_HOME&#125;</span>/lib</div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;JAVA_HOME&#125;</span>/bin:<span class="variable">$PATH</span></div></pre></td></tr></table></figure></p>
<p>保存退出，并通过命令使脚本生效：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">source</span> ~/.bashrc</div></pre></td></tr></table></figure></p>
<h2 id="第四步，配置默认JDK版本"><a href="#第四步，配置默认JDK版本" class="headerlink" title="第四步，配置默认JDK版本"></a>第四步，配置默认JDK版本</h2><p>在有的系统中会预装OpenJDK，系统默认使用的是这个，而不是刚才装的。所以这一步是通知系统使用Oracle的JDK，非OpenJDK。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/java-8/bin/java 300</div><div class="line">sudo update-alternatives --install /usr/bin/javac javac /usr/lib/jvm/java-8/bin/javac 300</div><div class="line">sudo update-alternatives --config java</div></pre></td></tr></table></figure></p>
<h2 id="第五步，测试验证"><a href="#第五步，测试验证" class="headerlink" title="第五步，测试验证"></a>第五步，测试验证</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">java -version</div><div class="line">java version <span class="string">"1.8.0_11"</span></div><div class="line">Java(TM) SE Runtime Environment (build 1.8.0_11-b12)</div><div class="line">Java HotSpot(TM) Client VM (build 25.11-b03, mixed mode)</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Npm命令行自动补全]]></title>
      <url>http://liyi.wiki/posts/55551.html</url>
      <content type="html"><![CDATA[<h1 id="npm-自动补全"><a href="#npm-自动补全" class="headerlink" title="npm 自动补全"></a>npm 自动补全</h1><p>将 <strong><code>. &lt;(npm completion)</code></strong>  放入.zshrc最后</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[MarkDown简明语法手册]]></title>
      <url>http://liyi.wiki/posts/27937.html</url>
      <content type="html"><![CDATA[<h2 id="Cmd-Markdown-简明语法手册"><a href="#Cmd-Markdown-简明语法手册" class="headerlink" title="Cmd Markdown 简明语法手册"></a>Cmd Markdown 简明语法手册</h2><h3 id="斜体和粗体"><a href="#斜体和粗体" class="headerlink" title="斜体和粗体"></a>斜体和粗体</h3><p>使用 <code>*</code> 和 <code>**</code> 表示斜体和粗体。<br>示例：<br>这是 <em>斜体</em>，这是 <strong>粗体</strong>。</p>
<a id="more"></a>
<h3 id="分级标题"><a href="#分级标题" class="headerlink" title="分级标题"></a>分级标题</h3><p>使用 === 表示一级标题，使用 — 表示二级标题。<br>你也可以选择在行首加井号表示不同级别的标题 (H1-H6)，例如：# H1, ## H2, ### H3，#### H4。<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="section">这是一个一级标题</span></div><div class="line">============================</div><div class="line"></div><div class="line"><span class="section">这是一个二级标题</span></div><div class="line">--------------------------------------------------</div><div class="line"></div><div class="line"><span class="section">### 这是一个三级标题</span></div></pre></td></tr></table></figure></p>
<h3 id="外链接"><a href="#外链接" class="headerlink" title="外链接"></a>外链接</h3><p>使用 [描述](链接地址) 为文字增加外链接。<br>示例：<br>这是去往 <a href="http://liyi0215.github.io" target="_blank" rel="external"><i class="fa fa-hand-pointer-o"></i>本人博客</a> 的链接。</p>
<h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><p>使用 *，+，- 表示无序列表。<br>示例：</p>
<ul>
<li>无序列表项 一</li>
<li>无序列表项 二</li>
<li>无序列表项 三</li>
</ul>
<h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><p>使用数字和点表示有序列表。<br>示例：</p>
<ol>
<li>有序列表项 一</li>
<li>有序列表项 二</li>
<li>有序列表项 三</li>
</ol>
<h3 id="文字引用"><a href="#文字引用" class="headerlink" title="文字引用"></a>文字引用</h3><p>使用 &gt; 表示文字引用。<br>示例：</p>
<blockquote>
<p>野火烧不尽，春风吹又生。</p>
</blockquote>
<h3 id="行内代码块"><a href="#行内代码块" class="headerlink" title="行内代码块"></a>行内代码块</h3><p>使用 `代码<code>表示行内代码块。
示例：
让我们聊聊</code>html`。</p>
<h3 id="插入图像"><a href="#插入图像" class="headerlink" title="插入图像"></a>插入图像</h3><p>使用 ![描述](图片链接地址) 插入图像。<br>示例：<br><img src="https://www.zybuluo.com/static/img/my_head.jpg" alt="我的头像"></p>
<h3 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h3><p>使用 ~~ 表示删除线。<br><del>这是一段错误的文本。</del></p>
<h3 id="加强的代码块"><a href="#加强的代码块" class="headerlink" title="加强的代码块"></a>加强的代码块</h3><p>支持四十一种编程语言的语法高亮的显示，行号显示。<br>非代码示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo apt-get install vim-gnome</div></pre></td></tr></table></figure></p>
<p>Python 示例：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@requires_authorization</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">somefunc</span><span class="params">(param1=<span class="string">''</span>, param2=<span class="number">0</span>)</span>:</span></div><div class="line">    <span class="string">'''A docstring'''</span></div><div class="line">    <span class="keyword">if</span> param1 &gt; param2: <span class="comment"># interesting</span></div><div class="line">        <span class="keyword">print</span> <span class="string">'Greater'</span></div><div class="line">    <span class="keyword">return</span> (param2 - param1 + <span class="number">1</span>) <span class="keyword">or</span> <span class="keyword">None</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">SomeClass</span>:</span></div><div class="line">    <span class="keyword">pass</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>message = <span class="string">'''interpreter</span></div><div class="line"><span class="meta">... </span>prompt'''</div></pre></td></tr></table></figure></p>
<p>JavaScript 示例：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line">* Date Format</div><div class="line">*/</div><div class="line"><span class="built_in">Date</span>.prototype.format = <span class="function"><span class="keyword">function</span> (<span class="params">fmt</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> o = &#123;</div><div class="line">        <span class="string">"M+"</span>: <span class="keyword">this</span>.getMonth() + <span class="number">1</span>,                      <span class="comment">//月份</span></div><div class="line">        <span class="string">"d+"</span>: <span class="keyword">this</span>.getDate(),                           <span class="comment">//日</span></div><div class="line">        <span class="string">"h+"</span>: <span class="keyword">this</span>.getHours(),                          <span class="comment">//小时</span></div><div class="line">        <span class="string">"m+"</span>: <span class="keyword">this</span>.getMinutes(),                        <span class="comment">//分</span></div><div class="line">        <span class="string">"s+"</span>: <span class="keyword">this</span>.getSeconds(),                        <span class="comment">//秒</span></div><div class="line">        <span class="string">"q+"</span>: <span class="built_in">Math</span>.floor((<span class="keyword">this</span>.getMonth() + <span class="number">3</span>) / <span class="number">3</span>),    <span class="comment">//季度</span></div><div class="line">        <span class="string">"S"</span>: <span class="keyword">this</span>.getMilliseconds()                     <span class="comment">//毫秒</span></div><div class="line">    &#125;;</div><div class="line">    <span class="keyword">if</span> (<span class="regexp">/(y+)/</span>.test(fmt))</div><div class="line">        fmt = fmt.replace(<span class="built_in">RegExp</span>.$<span class="number">1</span>, (<span class="keyword">this</span>.getFullYear() + <span class="string">""</span>).substr(<span class="number">4</span> - <span class="built_in">RegExp</span>.$<span class="number">1.</span>length));</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> k <span class="keyword">in</span> o)</div><div class="line">        <span class="keyword">if</span> (<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"("</span> + k + <span class="string">")"</span>).test(fmt))</div><div class="line">            fmt = fmt.replace(<span class="built_in">RegExp</span>.$<span class="number">1</span>, (<span class="built_in">RegExp</span>.$<span class="number">1.</span>length == <span class="number">1</span>) ? (o[k]) : ((<span class="string">"00"</span> + o[k]).substr((<span class="string">""</span> + o[k]).length)));</div><div class="line">    <span class="keyword">return</span> fmt;</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
<h3 id="内嵌图标"><a href="#内嵌图标" class="headerlink" title="内嵌图标"></a>内嵌图标</h3><p>本站的图标系统对外开放，在文档中输入<br>    <i class="fa fa-weibo"></i><br>即显示微博的图标： <i class="fa fa-weibo"></i><br>替换 上述 <code>i 标签</code> 内的 <code>fa-weibo</code> 以显示不同的图标，例如：<br>    <i class="fa fa-renren"></i><br>即显示人人的图标： <i class="fa fa-renren"></i><br>更多的图标和玩法可以参看 <a href="http://fontawesome.io/icons/" target="_blank" rel="external">font-awesome</a> 官方网站。</p>
<h3 id="待办事宜-Todo-列表"><a href="#待办事宜-Todo-列表" class="headerlink" title="待办事宜 Todo 列表"></a>待办事宜 Todo 列表</h3><p>使用带有 [ ] 或 [x] （未完成或已完成）项的列表语法撰写一个待办事宜列表，并且支持子列表嵌套以及混用Markdown语法，例如：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="bullet">- </span>[ ] <span class="strong">**Cmd Markdown 开发**</span></div><div class="line"><span class="code">    - [ ] 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率</span></div><div class="line"><span class="code">    - [ ] 支持以 PDF 格式导出文稿</span></div><div class="line"><span class="code">    - [x] 新增Todo列表功能 [语法参考](https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments)</span></div><div class="line"><span class="code">    - [x] 改进 LaTex 功能</span></div><div class="line"><span class="code">        - [x] 修复 LaTex 公式渲染问题</span></div><div class="line"><span class="code">        - [x] 新增 LaTex 公式编号功能 [语法参考](http://docs.mathjax.org/en/latest/tex.html#tex-eq-numbers)</span></div><div class="line"><span class="bullet">- </span>[ ] <span class="strong">**七月旅行准备**</span></div><div class="line"><span class="code">    - [ ] 准备邮轮上需要携带的物品</span></div><div class="line"><span class="code">    - [ ] 浏览日本免税店的物品</span></div><div class="line"><span class="code">    - [x] 购买蓝宝石公主号七月一日的船票</span></div></pre></td></tr></table></figure></p>
<p>对应显示如下待办事宜 Todo 列表：</p>
<ul>
<li>[ ] <strong>Cmd Markdown 开发</strong><ul>
<li>[ ] 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率</li>
<li>[ ] 支持以 PDF 格式导出文稿</li>
<li>[x] 新增Todo列表功能 <a href="https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments" target="_blank" rel="external">语法参考</a></li>
<li>[x] 改进 LaTex 功能<ul>
<li>[x] 修复 LaTex 公式渲染问题</li>
<li>[x] 新增 LaTex 公式编号功能 <a href="http://docs.mathjax.org/en/latest/tex.html#tex-eq-numbers" target="_blank" rel="external">语法参考</a></li>
</ul>
</li>
</ul>
</li>
<li>[ ] <strong>七月旅行准备</strong><ul>
<li>[ ] 准备邮轮上需要携带的物品</li>
<li>[ ] 浏览日本免税店的物品</li>
<li>[x] 购买蓝宝石公主号七月一日的船票</li>
</ul>
</li>
</ul>
<h3 id="表格支持"><a href="#表格支持" class="headerlink" title="表格支持"></a>表格支持</h3><table>
<thead>
<tr>
<th>项目</th>
<th style="text-align:right">价格</th>
<th style="text-align:center">数量</th>
</tr>
</thead>
<tbody>
<tr>
<td>计算机</td>
<td style="text-align:right">\$1600</td>
<td style="text-align:center">5</td>
</tr>
<tr>
<td>手机</td>
<td style="text-align:right">\$12</td>
<td style="text-align:center">12</td>
</tr>
<tr>
<td>管线</td>
<td style="text-align:right">\$1</td>
<td style="text-align:center">234</td>
</tr>
</tbody>
</table>
<h3 id="Html-标签"><a href="#Html-标签" class="headerlink" title="Html 标签"></a>Html 标签</h3><p>支持在 Markdown 语法中嵌套 Html 标签，譬如，你可以用 Html 写一个纵跨两行的表格：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">th</span> <span class="attr">rowspan</span>=<span class="string">"2"</span>&gt;</span>值班人员<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>星期一<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>星期二<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>星期三<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>李强<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>张明<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>王平<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>对应表格如下</p>
<table><br>    <tr><br>        <th rowspan="2">值班人员</th><br>        <th>星期一</th><br>        <th>星期二</th><br>        <th>星期三</th><br>    </tr><br>    <tr><br>        <td>李强</td><br>        <td>张明</td><br>        <td>王平</td><br>    </tr><br></table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[快速切换npm源的开源工具--nrm]]></title>
      <url>http://liyi.wiki/posts/57882.html</url>
      <content type="html"><![CDATA[<h1 id="nrm-是一个-NPM-源管理器，允许你快速地在如下-NPM-源间切换："><a href="#nrm-是一个-NPM-源管理器，允许你快速地在如下-NPM-源间切换：" class="headerlink" title="nrm 是一个 NPM 源管理器，允许你快速地在如下 NPM 源间切换："></a>nrm 是一个 NPM 源管理器，允许你快速地在如下 NPM 源间切换：</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g nrm</div></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="列出可选的源"><a href="#列出可选的源" class="headerlink" title="列出可选的源"></a>列出可选的源</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nrm ls</div></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>npm —- <a href="https://registry.npmjs.org/" target="_blank" rel="external">https://registry.npmjs.org/</a><br>  cnpm — <a href="http://r.cnpmjs.org/" target="_blank" rel="external">http://r.cnpmjs.org/</a><br>  taobao - <a href="http://registry.npm.taobao.org/" target="_blank" rel="external">http://registry.npm.taobao.org/</a><br>  eu —– <a href="http://registry.npmjs.eu/" target="_blank" rel="external">http://registry.npmjs.eu/</a><br>  au —– <a href="http://registry.npmjs.org.au/" target="_blank" rel="external">http://registry.npmjs.org.au/</a><br>  sl —– <a href="http://npm.strongloop.com/" target="_blank" rel="external">http://npm.strongloop.com/</a><br>  nj —– <a href="https://registry.nodejitsu.com/" target="_blank" rel="external">https://registry.nodejitsu.com/</a>　　<br>带 * 的是当前使用的源，上面的输出表明当前源是官方源。</li>
</ul>
</blockquote>
<h2 id="切换"><a href="#切换" class="headerlink" title="切换"></a>切换</h2><h3 id="切换到taobao"><a href="#切换到taobao" class="headerlink" title="切换到taobao"></a>切换到taobao</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nrm use taobao</div></pre></td></tr></table></figure>
<blockquote>
<p>Registry has been set to: <a href="http://registry.npm.taobao.org/" target="_blank" rel="external">http://registry.npm.taobao.org/</a></p>
</blockquote>
<h2 id="增加源"><a href="#增加源" class="headerlink" title="增加源"></a>增加源</h2><p>你可以增加定制的源，特别适用于添加企业内部的私有源。私有源可以使用cnpmjs架设。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nrm add &lt;registry&gt; &lt;url&gt; [home]</div></pre></td></tr></table></figure></p>
<h2 id="删除源"><a href="#删除源" class="headerlink" title="删除源"></a>删除源</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nrm del &lt;registry&gt;</div></pre></td></tr></table></figure>
<h2 id="测试速度"><a href="#测试速度" class="headerlink" title="测试速度"></a>测试速度</h2><p>你还可以通过 nrm test 测试相应源的响应时间。<br>例如，测试官方源的响应时间：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nrm <span class="built_in">test</span> npm</div></pre></td></tr></table></figure></p>
<p>测试所有源的响应时间：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nrm <span class="built_in">test</span></div></pre></td></tr></table></figure></p>
<p>注意，为了取得较准确的结果，可以考虑多次测试取平均值。<br>nrm 为开源软件，使用 MIT 许可。</p>
<h2 id="nrm项目主页"><a href="#nrm项目主页" class="headerlink" title="nrm项目主页"></a><a href="https://github.com/Pana/nrm" target="_blank" rel="external"><i class="fa fa-github"></i>nrm项目主页</a></h2>]]></content>
    </entry>
    
  
  
</search>
